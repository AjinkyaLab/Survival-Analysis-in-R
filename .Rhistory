install.packages("survival")
library(survival)
library(tidyverse)
dialysis <- read_csv("C:/Users/Ajinkyaa/OneDrive/Stata to R/New folder/Survival analysis/dialysis survival dataset.csv")
head(dialysis)
names(dialysis)
cr <- round(cor(dialysis), 2)
cr
ggcorrplot(cr,title = "correlogram", lab_col = "black",
lab = TRUE, legend.title = "Pearson Correlation",
lab_size=2, ggtheme = theme_classic(),
outline.color = "black",
colors = c("orange", "green", "blue"))
library (ggcorrplot)
ggcorrplot(cr,title = "correlogram", lab_col = "black",
lab = TRUE, legend.title = "Pearson Correlation",
lab_size=2, ggtheme = theme_classic(),
outline.color = "black",
colors = c("orange", "green", "blue"))
# Histogram for Age
ggplot(dialysis, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Age Distribution", x = "Age", y = "Frequency") +
theme_minimal()
# Boxplot for Time by Diabetes Status
ggplot(dialysis, aes(x = factor(disease_diabetes), y = time, fill = factor(disease_diabetes))) +
geom_boxplot() +
labs(title = "Time Distribution by Diabetes Status", x = "Diabetes (0 = No, 1 = Yes)", y = "Time") +
scale_fill_manual(values = c("orange", "purple")) +
theme_minimal()
# 3. Density Plot for Time
ggplot(dialysis, aes(x = time, fill = factor(disease_diabetes))) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Time by Diabetes Status", x = "Time", y = "Density", fill = "Diabetes") +
scale_fill_manual(values = c("blue", "red")) +
theme_minimal()
ggplot(dialysis, aes(x = factor(disease_diabetes), fill = factor(disease_diabetes))) +
geom_bar() +
labs(title = "Bar Plot of Diabetes Status", x = "Diabetes (0 = No, 1 = Yes)", y = "Count") +
scale_fill_manual(values = c("green", "yellow")) +
theme_minimal()
ggplot(dialysis, aes(x = age, y = time, color = factor(disease_diabetes))) +
geom_point(alpha = 0.7) +
labs(title = "Scatter Plot of Age vs. Time", x = "Age", y = "Time", color = "Diabetes") +
theme_minimal()
# 6. Pairwise Plot for Selected Variables
library(GGally)
ggpairs(dialysis, columns = c("age", "time", "begin"), aes(color = factor(disease_diabetes)))
ggplot(dialysis, aes(x = factor(disease_diabetes), fill = factor(disease_hypert))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot of Hypertension by Diabetes", x = "Diabetes", y = "Count", fill = "Hypertension") +
scale_fill_manual(values = c("pink", "lightblue")) +
theme_minimal()
km_model <- survfit(Surv(time, event) ~ disease_diabetes, data = dialysis)
summary(km_model)
install.packages("flexsurv")
installed.packages("survminer")
head(dialysis)
str(dialysis)
summary(dialysis)
colSums(is.na(dialysis))
dialysis <- dialysis %>% drop_na()
cr <- round(cor(dialysis), 2) #Store correlation matrix
cr
ggcorrplot(cr,title = "correlogram", lab_col = "black",
lab = TRUE, legend.title = "Pearson Correlation",
lab_size=2, ggtheme = theme_classic(),
outline.color = "black",
colors = c("orange", "green", "blue"))
ggplot(dialysis, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Age Distribution", x = "Age", y = "Frequency") +
theme_minimal()
ggplot(dialysis, aes(x = time, fill = factor(disease_diabetes))) +
geom_density(alpha = 0.5) +
labs(title = "Density of Survival Time by Diabetes Status", x = "Time", fill = "Diabetes") +
theme_minimal()
km_model <- survfit(Surv(time, event) ~ disease_diabetes, data = dialysis)
summary(km_model)
ggsurvplot(km_model,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Kaplan-Meier Survival Curves by Diabetes Status",
xlab = "Time (days)",
ylab = "Survival Probability",
palette = c("blue", "red"))
install.packages("ggsurvplot")
ggsurvplot(km_model,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Kaplan-Meier Survival Curves by Diabetes Status",
xlab = "Time (days)",
ylab = "Survival Probability",
palette = c("blue", "red"))
install.packages("survival")
km_model <- survfit(Surv(time, status) ~ diabetes_status, data = dialysis)
ggsurvplot(km_model,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Kaplan-Meier Survival Curves by Diabetes Status",
xlab = "Time (days)",
ylab = "Survival Probability",
palette = c("blue", "red"))
km_model <- survfit(Surv(time, event) ~ disease_diabetes, data = dialysis)
library(survival)
library(tidyverse)
library(GGally)
library(survminer)
library(flexsurv)
library(ggplot2)
library (ggcorrplot)
setwd("C:/Users/Ajinkyaa/OneDrive/Stata to R/New folder/Survival analysis")
dialysis <- read_csv("C:/Users/Ajinkyaa/OneDrive/Stata to R/New folder/Survival analysis/dialysis survival dataset.csv")
head(dialysis)
str(dialysis)
summary(dialysis)
colSums(is.na(dialysis))
dialysis <- dialysis %>% drop_na()
cr <- round(cor(dialysis), 2) #Store correlation matrix
cr
#Visualize your correlations (Creates a visual heatmap of the correlation matrix)
ggcorrplot(cr,title = "correlogram", lab_col = "black",
lab = TRUE, legend.title = "Pearson Correlation",
lab_size=2, ggtheme = theme_classic(),
outline.color = "black",
colors = c("orange", "green", "blue"))
ggplot(dialysis, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Age Distribution", x = "Age", y = "Frequency") +
theme_minimal()
ggplot(dialysis, aes(x = factor(disease_diabetes), y = time, fill = factor(disease_diabetes))) +
geom_boxplot() +
labs(title = "Time Distribution by Diabetes Status", x = "Diabetes (0 = No, 1 = Yes)", y = "Time") +
scale_fill_manual(values = c("orange", "purple")) +
theme_minimal()
ggplot(dialysis, aes(x = time, fill = factor(disease_diabetes))) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Time by Diabetes Status", x = "Time", y = "Density", fill = "Diabetes") +
scale_fill_manual(values = c("blue", "red")) +
theme_minimal()
ggplot(dialysis, aes(x = factor(disease_diabetes), fill = factor(disease_diabetes))) +
geom_bar() +
labs(title = "Bar Plot of Diabetes Status", x = "Diabetes (0 = No, 1 = Yes)", y = "Count") +
scale_fill_manual(values = c("green", "yellow")) +
theme_minimal()
ggplot(dialysis, aes(x = age, y = time, color = factor(disease_diabetes))) +
geom_point(alpha = 0.7) +
labs(title = "Scatter Plot of Age vs. Time", x = "Age", y = "Time", color = "Diabetes") +
theme_minimal()
library(GGally)
ggpairs(dialysis, columns = c("age", "time", "begin"), aes(color = factor(disease_diabetes)))
ggplot(dialysis, aes(x = age, y = time, color = factor(disease_diabetes))) +
geom_point(alpha = 0.7) +
labs(title = "Scatter Plot of Age vs. Time", x = "Age", y = "Time", color = "Diabetes") +
theme_minimal()
library(GGally)
ggpairs(dialysis, columns = c("age", "time", "begin"), aes(color = factor(disease_diabetes)))
ggplot(dialysis, aes(x = factor(disease_diabetes), fill = factor(disease_hypert))) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Plot of Hypertension by Diabetes", x = "Diabetes", y = "Count", fill = "Hypertension") +
scale_fill_manual(values = c("pink", "lightblue")) +
theme_minimal()
# Fit Kaplan-Meier model
km_model <- survfit(Surv(time, event) ~ disease_diabetes, data = dialysis)
summary(km_model)
ggsurvplot(km_model,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Kaplan-Meier Survival Curves by Diabetes Status",
xlab = "Time (days)",
ylab = "Survival Probability",
palette = c("blue", "red"))
ggsurvplot(km_model,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Kaplan-Meier Survival Curves by Diabetes Status",
xlab = "Time (days)",
ylab = "Survival Probability",
palette = c("blue", "red"))
log_rank <- survdiff(Surv(time, event) ~ disease_diabetes, data = dialysis)
log_rank
cox_model <- coxph(Surv(time, event) ~ disease_hypert + disease_renal + begin + center, data = dialysis)
summary(cox_model)
ph_test <- cox.zph(cox_model)
ph_test
ggcoxzph(ph_test)
ggsurvplot(survfit(cox_model),
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
title = "Cox Model Survival Curves",
xlab = "Time (days)",
ylab = "Survival Probability")
exp_model <- flexsurvreg(Surv(time, event) ~ disease_hypert + disease_renal + begin + center,
data = dialysis, dist = "exponential")
summary(exp_model)
weibull_model <- flexsurvreg(Surv(time, event) ~ disease_hypert + disease_renal + begin + center,
data = dialysis, dist = "weibull")
summary(weibull_model)
model_comparison <- data.frame(
Model = c("Exponential", "Weibull"),
AIC = c(AIC(exp_model), AIC(weibull_model))
)
model_comparison
# Predict survival at specific times using Weibull model
predict(weibull_model, newdata = dialysis, type = "survival", times = c(10, 20, 30))
km_model_subgroup <- survfit(Surv(time, event) ~ disease_renal, data = dialysis)
ggsurvplot(km_model_subgroup,
data = dialysis,
conf.int = TRUE,
risk.table = TRUE,
pval = TRUE,
title = "Survival Curves by Renal Disease",
palette = c("green", "purple"))
ggsave("km_survival_plot.png")
write_csv(model_comparison, "model_comparison.csv")
library(survival)
library(tidyverse)
library(GGally)
library(survminer)
library(flexsurv)
library(ggplot2)
library (ggcorrplot)
